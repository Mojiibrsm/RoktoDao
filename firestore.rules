
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check for admin role
    function isAdmin() {
      return exists(/databases/$(database)/documents/donors/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/donors/$(request.auth.uid)).data.isAdmin == true;
    }

    // Donors Collection
    match /donors/{userId} {
      // Anyone can see a donor's profile (for search functionality)
      allow read: if true;
      // Anyone can sign up (create their own document)
      allow create: if request.auth != null && request.auth.uid == userId;
      // Users can update their own profile, or an admin can update any profile
      allow update: if (request.auth != null && request.auth.uid == userId) || isAdmin();
      // Only admins can delete donor profiles
      allow delete: if isAdmin();
    }

    // Requests Collection
    match /requests/{requestId} {
      // Anyone can read blood requests
      allow read: if true;
      // Anyone can create a blood request
      allow create: if true;
      // Only admins can update or delete requests
      allow update, delete: if isAdmin();
    }
    
    // OTP Codes - Allow creation, but restrict read/update for security
    match /otp_codes/{phone} {
      allow read, update, delete: if false; // Deny client access
      allow create: if true; // Allow anyone to request an OTP
    }
    
    // Settings Collection - Only admins
    match /settings/{settingId} {
      allow read, write: if isAdmin();
    }

    // Feedback Collection - Creation allowed, but only admins can manage
    match /feedback/{feedbackId} {
        allow create: if true;
        allow read, update, delete: if isAdmin();
    }

    // Marquee Notices - Read for all, write for admins
    match /marquee-notices/{noticeId} {
        allow read: if true;
        allow write: if isAdmin();
    }
    
    // Gallery - Read approved for all, manage for admins
    match /gallery/{imageId} {
        allow read: if resource.data.status == 'approved';
        allow create: if request.auth != null;
        allow update, delete: if isAdmin();
    }
    
    // Moderators - Only admins can read/write
    match /moderators/{modId} {
      allow read, write: if isAdmin();
    }
    
    // Blogs - Read for all, write for admins
    match /blogs/{blogId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // SMS Logs - only admins
    match /sms_logs/{logId} {
        allow read, write: if isAdmin();
    }
  }
}
