rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAdmin() {
      // Check if the user is an admin by looking at their custom claims or a field in their user document.
      // Assumes you have a 'donors' collection where user roles are stored.
      return get(/databases/$(database)/documents/donors/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Donors collection rules
    match /donors/{donorId} {
      // ANYONE can check for existing users during signup.
      // AUTHENTICATED users can search for available donors.
      // ADMINS can list all donors.
      allow list: if (request.query.where.isAvailable == true) || 
                  request.query.keys().hasAny(['phoneNumber', 'email']) || 
                  isAdmin();
      
      // Allow user to read their own data, or admin to read any
      allow get: if request.auth.uid == donorId || isAdmin();
      
      // Allow ANYONE to create a new donor profile (signup)
      allow create: if true;
      
      // Allow user to update their own data, or admin to update any
      allow update: if request.auth.uid == donorId || isAdmin();
      
      // Allow user to delete their own data, or admin to delete any
      allow delete: if request.auth.uid == donorId || isAdmin();
    }
    
    // Requests collection rules
    match /requests/{requestId} {
      // Allow ANYONE to read requests (for homepage stats and requests page)
      allow read: if true;
      
      // Allow ANYONE to create a new request
      allow create: if true;
      
      // Allow only LOGGED IN users to respond (update responders) or admins to update anything
      allow update: if request.auth != null || isAdmin();
      
      // Allow only admins to delete
      allow delete: if isAdmin();
    }

    // Settings collection rules
    match /settings/{settingId} {
      // Allow ANYONE to read the global settings (e.g., for site name)
      allow get: if settingId == 'global';
      // Allow only admins to change settings
      allow write: if isAdmin();
    }

    // Marquee-notices collection rules
    match /marquee-notices/{noticeId} {
      // Allow ANYONE to read notices for the marquee
      allow read: if true;
      // Allow only admins to write notices
      allow write: if isAdmin();
    }
    
    // Blogs collection rules
    match /blogs/{blogId} {
      // Allow ANYONE to read blogs
      allow read: if true;
      // Allow only admins to create, update, or delete blogs
      allow write: if isAdmin();
    }
    
    // Gallery collection rules
    match /gallery/{imageId} {
      // Allow anyone to read APPROVED gallery images
      allow list: if request.query.where.status == 'approved' || isAdmin();
      allow get: if resource.data.status == 'approved' || isAdmin();
      
      // Allow only logged-in users to create (upload)
      allow create: if request.auth != null;

      // Allow only admins to update or delete
      allow update, delete: if isAdmin();
    }
    
    // Moderators collection rules
    match /moderators/{moderatorId} {
      // Allow anyone to read moderators list (for team/about page)
      allow read: if true;
      // Allow only admins to create, update, or delete moderators
      allow write: if isAdmin();
    }
    
    // Feedback collection rules
    match /feedback/{feedbackId} {
        // Allow anyone to submit feedback
        allow create: if true;
        // Allow only admins to read, update or delete feedback
        allow read, update, delete: if isAdmin();
    }

    // SMS Logs collection rules
    match /sms_logs/{logId} {
        // Allow only admins to read or write SMS logs
        allow read, write: if isAdmin();
    }

    // OTP Codes collection rules
    match /otp_codes/{phone} {
      // These are handled by server-side admin SDK, no client rules needed.
      // Deny all client access for security.
      allow read, write: if false;
    }
  }
}
