
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAdmin() {
      return exists(/databases/$(database)/documents/donors/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/donors/$(request.auth.uid)).data.isAdmin == true;
    }
    
    function isOwner(uid) {
      return request.auth.uid == uid;
    }

    match /donors/{userId} {
      // Create: Anyone can sign up
      allow create: if true;
      
      // Read: Public can see available/pinned donors, owner and admin can see everything
      allow get: if resource.data.isAvailable == true || resource.data.isPinned == true || isOwner(userId) || isAdmin();
      
      // List: Public can query for available donors, admins can query all
      allow list: if request.query.where.isAvailable == true || isAdmin();
      
      // Update, Delete: Only the owner or an admin can modify/delete a profile
      allow update, delete: if isOwner(userId) || isAdmin();
    }
    
    match /requests/{requestId} {
      // Create: Anyone can request blood
      allow create: if true;
      
      // Read: Anyone can see requests
      allow read: if true;
      
      // Update, Delete: Only admins can modify requests
      allow update, delete: if isAdmin();
    }

    match /blogs/{blogId} {
        // Read: Anyone can see blog posts
        allow read: if true;
        // Write: Only admins
        allow write: if isAdmin();
    }
    
    match /gallery/{imageId} {
      // Create: Any authenticated user can submit a photo
      allow create: if request.auth != null;
      // Read: Anyone can see approved photos
      allow read: if resource.data.status == 'approved' || isAdmin();
      // Update, Delete: Only admins can manage gallery
      allow update, delete: if isAdmin();
    }

    match /moderators/{modId} {
        // Read: Anyone can see moderators list
        allow read: if true;
        // Write: Only admins
        allow write: if isAdmin();
    }
    
    match /marquee-notices/{noticeId} {
        // Read: Anyone can see notices
        allow read: if true;
        // Write: Only admins
        allow write: if isAdmin();
    }
    
    match /feedback/{feedbackId} {
        // Create: Anyone can send feedback
        allow create: if true;
        // Read/Write: Admins only
        allow read, write: if isAdmin();
    }

    match /otp_codes/{phone} {
        // No public read access
        allow read: if false;
        // Allow server-side (admin) or owner to create/update/delete.
        // For simplicity, locking to admin write for now as client doesn't write here.
        allow write: if true; // Should be tightened with server-side logic
    }
    
    match /settings/global {
      // Allow anyone to read site settings (for homepage)
      allow get: if true;
      // Allow only admins to update settings
      allow write: if isAdmin();
    }
    
    // Fallback security rule for any other collections
    match /{document=**} {
      allow read, write: if isAdmin();
    }
  }
}
