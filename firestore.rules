
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin() {
      return exists(/databases/$(database)/documents/donors/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/donors/$(request.auth.uid)).data.isAdmin == true;
    }

    // Donors collection: Public can read, users can create/update their own profile, admins can do anything.
    match /donors/{userId} {
      allow read: if true;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;
      allow update: if (request.auth != null && request.auth.uid == userId) || isAdmin();
      allow delete: if isAdmin();
    }

    // Requests collection: Public can read, authenticated users can create, admins can update/delete.
    match /requests/{requestId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if isAdmin();
    }

    // Blogs collection: Public can read, only admins can write.
    match /blogs/{blogId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Gallery collection: Public can read approved images, authenticated users can submit pending images, admins can manage all.
    match /gallery/{imageId} {
      allow read: if resource.data.status == 'approved' || isAdmin();
      allow create: if request.auth != null && request.resource.data.status == 'pending';
      allow update, delete: if isAdmin();
    }
    
    // Feedback collection: Only admins can read/write.
    match /feedback/{feedbackId} {
      allow read, write: if isAdmin();
    }

    // Marquee Notices: Public can read, admins can write.
    match /marquee-notices/{noticeId} {
        allow read: if true;
        allow write: if isAdmin();
    }
    
    // Moderators: Public can read, admins can write.
    match /moderators/{modId} {
        allow read: if true;
        allow write: if isAdmin();
    }
    
    // Settings: Only admins can read/write.
    match /settings/{settingId} {
      allow read, write: if isAdmin();
    }
  }
}
