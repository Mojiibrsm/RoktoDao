
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper Functions
    function isUser(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    function isAdmin() {
      // Check if the user is an admin by looking at their custom claims or a specific document.
      // This is more secure than checking a field in a public document.
      // For this example, we'll check a field in their donor profile.
      return exists(/databases/$(database)/documents/donors/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/donors/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Donors Collection
    // The `donors` collection stores user profile information that is an extension of Firebase Auth.
    match /donors/{userId} {
      // Allow admins and the user themselves to write to their own document.
      allow write: if isUser(userId) || isAdmin();

      // Allow admins to list all donors, and public to query only for available donors
      allow list: if (request.query.where.isAvailable == true && (request.query.where.isPinned == true || request.query.where.isPinned == false)) || isAdmin();

      // Allow any user to get a donor's profile if they are available OR pinned (for homepage). Admins can get any.
      allow get: if resource.data.isAvailable == true || resource.data.isPinned == true || isAdmin();
    }

    // Requests Collection
    // Stores all blood donation requests.
    match /requests/{requestId} {
      // Allow anyone to read requests (for homepage stats and requests page)
      allow read: if true;

      // Allow any user (even unauthenticated) to create a request
      allow create: if true;

      // Allow the user who created it or an admin to update/delete it
      allow update, delete: if resource.data.uid == request.auth.uid || isAdmin();
    }

    // Marquee Notices Collection
    // For homepage scrolling text
    match /marquee-notices/{noticeId} {
      // Allow anyone to read notices
      allow read: if true;
      // Only admins can write/delete
      allow write: if isAdmin();
    }

    // Blogs Collection
    // For blog posts
    match /blogs/{blogId} {
        // Allow anyone to read blog posts
        allow read: if true;
        // Allow only admins to create, update, or delete posts
        allow write: if isAdmin();
    }

    // Moderators Collection
    // For team page
    match /moderators/{modId} {
      // Allow anyone to read team members
      allow read: if true;
      // Only admins can manage team members
      allow write: if isAdmin();
    }

    // Gallery Collection
    // For user-submitted gallery images
    match /gallery/{imageId} {
      // Allow anyone to see approved images
      allow read: if resource.data.status == 'approved';
      // Allow any authenticated user to create a pending image
      allow create: if request.auth != null;
      // Allow only admins to update (approve) or delete images
      allow update, delete: if isAdmin();
    }
    
    // Settings Collection
    // For global site settings
    match /settings/global {
      // Allow anyone to read site settings (for homepage)
      allow get: if true;
      // Allow only admins to update settings
      allow write: if isAdmin();
    }
    
    // Feedback Collection
    match /feedback/{feedbackId} {
        // Allow authenticated users to submit feedback
        allow create: if request.auth != null;
        // Only allow admins to read or write
        allow read, write: if isAdmin();
    }
    
    // OTP Codes Collection
    match /otp_codes/{phone} {
        // Disallow any client-side reads
        allow read: if false;
        // Allow anyone to create an OTP document (for password reset)
        allow create: if true;
        // Only allow backend (admin) to update or delete
        allow write: if false;
    }
    
    // SMS Logs Collection (write-only from backend)
    match /sms_logs/{logId} {
        allow read, write: if false; // No client access
    }

    // Any other collection is locked down by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
