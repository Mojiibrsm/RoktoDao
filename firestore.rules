rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/donors/$(request.auth.uid)).data.isAdmin == true;
    }

    // Donors collection rules
    match /donors/{donorId} {
      // ANYONE can query the list to check for existing phone/email during signup
      // or to search for available donors.
      allow list: if (request.query.keys().hasAny(['phoneNumber', 'email'])) || 
                     (request.query.where.isAvailable == true) ||
                     isAdmin();

      // ONLY logged-in users can read their own profile, or admins can read any.
      allow get: if request.auth.uid == donorId || isAdmin();
      
      // ANYONE can create a new donor profile (signup).
      allow create: if true;

      // ONLY logged-in users can update their own profile, or admins can update any.
      allow update: if request.auth.uid == donorId || isAdmin();

      // ONLY admins can delete a donor.
      allow delete: if isAdmin();
    }

    // Requests collection rules
    match /requests/{requestId} {
      // ANYONE can view the list of requests.
      allow list, get: if true;
      
      // ANYONE can create a new request.
      allow create: if true;
      
      // Admins can update/delete any request. Users can update their own request.
      allow update, delete: if isAdmin() || request.auth.uid == resource.data.uid;
    }

    // Blogs collection rules
    match /blogs/{blogId} {
        // ANYONE can read blog posts.
        allow list, get: if true;
        
        // ONLY admins can write/update/delete blog posts.
        allow write, update, delete: if isAdmin();
    }

    // Gallery collection rules
    match /gallery/{imageId} {
      // ANYONE can list approved images.
      allow list: if request.query.where.status == 'approved' || isAdmin();
      
      // ANYONE can get a specific image if it's approved.
      allow get: if resource.data.status == 'approved' || isAdmin();
      
      // ONLY logged-in users can create/upload an image (it will be 'pending').
      allow create: if request.auth != null;
      
      // ONLY admins can update (approve) or delete images.
      allow update, delete: if isAdmin();
    }
    
    // Marquee-notices collection rules
    match /marquee-notices/{noticeId} {
      // ANYONE can view the notices.
      allow list, get: if true;
      
      // ONLY admins can create, update, or delete notices.
      allow write: if isAdmin();
    }

    // Moderators collection rules
    match /moderators/{modId} {
       // ANYONE can view the list of moderators (for the team page).
      allow list, get: if true;
      
      // ONLY admins can manage moderators.
      allow write: if isAdmin();
    }
    
    // Feedback collection rules
    match /feedback/{feedbackId} {
      // ONLY admins can read feedback.
      allow read: if isAdmin();
      
      // ANYONE can create feedback (contact form).
      allow create: if true;
      
      // ONLY admins can update or delete feedback.
      allow update, delete: if isAdmin();
    }

    // Settings collection rules
    match /settings/global {
      // ANYONE can read the global settings.
      allow get: if true;
      
      // ONLY admins can write to settings.
      allow write: if isAdmin();
    }

    // OTP codes collection rules (restricted)
    match /otp_codes/{phone} {
        // NO ONE can read/list OTP codes from the client.
        // These are managed by the server-side Admin SDK only.
        allow read, write: if false;
    }

    // SMS logs collection rules (restricted)
    match /sms_logs/{logId} {
      // ONLY admins can read SMS logs.
      allow read: if isAdmin();
      // NO ONE can write from client, logs are created by server.
      allow write: if false;
    }
  }
}
