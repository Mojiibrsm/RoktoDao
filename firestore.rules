rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if the user is an admin
    function isAdmin() {
      // Check if the user is authenticated and if their profile has isAdmin set to true
      return request.auth != null && get(/databases/$(database)/documents/donors/$(request.auth.uid)).data.isAdmin == true;
    }

    // Donors collection rules
    match /donors/{userId} {
      // Admins can do anything
      // Users can get their own profile
      // Public can get profile if it's available or pinned
      allow get: if resource.data.isAvailable == true || resource.data.isPinned == true || request.auth.uid == userId || isAdmin();
      
      // Allow public queries for available donors (for search page)
      // Admins can list all donors
      allow list: if request.query.where.isAvailable == true || isAdmin();

      // Users can create their own profile
      allow create: if request.auth.uid == userId;

      // Users can update their own profile
      // Admins can update any profile
      allow update: if request.auth.uid == userId || isAdmin();

      // Admins can delete any profile
      allow delete: if isAdmin();
    }

    // Blood Requests collection rules
    match /requests/{requestId} {
      // Allow ANYONE to read requests (for homepage stats and requests page)
      allow read: if true;

      // Logged-in users can create requests for themselves
      // Admins can create any request
      allow create: if request.auth.uid == request.resource.data.uid || isAdmin();

      // Admins can update any request
      allow update: if isAdmin();

      // Admins can delete any request
      allow delete: if isAdmin();
    }

    // Blogs collection rules
    match /blogs/{blogId} {
      // Allow anyone to read blog posts
      allow read: if true;
      // Allow only admins to create, update, or delete posts
      allow write: if isAdmin();
    }

    // Gallery collection rules
    match /gallery/{imageId} {
       // Allow anyone to read approved images
      allow get: if resource.data.status == 'approved';
      // Allow anyone to list approved images
      allow list: if request.query.where.status == 'approved';
       // Logged-in users can create pending images
      allow create: if request.auth.uid == request.resource.data.uploaderId;
      // Admins can update/delete any image
      allow write: if isAdmin();
    }
    
    // Marquee notices rules
    match /marquee-notices/{noticeId} {
        // Allow anyone to read notices
        allow read: if true;
        // Only admins can write notices
        allow write: if isAdmin();
    }
    
    // Moderators collection rules
    match /moderators/{moderatorId} {
        // Allow anyone to read moderators list (for team/about page)
        allow read: if true;
        // Allow only admins to create, update, or delete moderators
        allow write: if isAdmin();
    }

    // Site settings rules
    match /settings/global {
      // Allow anyone to read site settings (for homepage)
      allow get: if true;
      // Allow only admins to update settings
      allow write: if isAdmin();
    }

    // OTP codes collection
    match /otp_codes/{phone} {
      // Deny all client-side reads
      allow read: if false;
      // Allow anyone to create (for password reset) but not update/delete
      allow create: if true;
      allow update, delete: if false;
    }
    
    // Feedback collection rules
    match /feedback/{feedbackId} {
      // Allow anyone to submit feedback
      allow create: if true;
      // Allow only admins to manage feedback
      allow read, update, delete: if isAdmin();
    }
    
    // SMS Logs collection rules
    match /sms_logs/{logId} {
       // Only admins can read logs
       allow read: if isAdmin();
       // Server-side (admin) can write logs, clients cannot.
       allow write: if false;
    }

  }
}
