
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAdmin() {
      return get(/databases/$(database)/documents/donors/$(request.auth.uid)).data.isAdmin == true;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isVerifiedUser() {
      return request.auth != null && get(/databases/$(database)/documents/donors/$(request.auth.uid)).data.isVerified == true;
    }
    
    // Blogs: Public can read, Admins can write
    match /blogs/{blogId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Marquee Notices: Public can read, Admins can write
    match /marquee-notices/{noticeId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Moderators: Public can read, Admins can write
    match /moderators/{modId} {
       allow read: if true;
       allow write: if isAdmin();
    }

    // Requests: Public can read. Authenticated users can create. Admins can do anything.
    match /requests/{requestId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if isAdmin();
    }

    // Settings: Only admins can read and write
    match /settings/{settingId} {
        allow read, write: if isAdmin();
    }

    // Donors (Users):
    // Read: Public can read basic info.
    // Create: Anyone can create their own profile.
    // Update: Users can update their own profile. Admins can update any.
    // Delete: Only Admins can delete.
    match /donors/{userId} {
      allow read: if true;
      allow create: if isOwner(userId);
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }
    
    // Gallery:
    // Read: Public can read approved images.
    // Create: Any authenticated user can create a new image document with status 'pending'.
    // Update: Only admins can update (e.g., to approve).
    // Delete: Only admins can delete.
    match /gallery/{imageId} {
      allow read: if resource.data.status == 'approved' || isAdmin();
      allow create: if request.auth != null && request.resource.data.status == 'pending';
      allow update, delete: if isAdmin();
    }
    
  }
}
